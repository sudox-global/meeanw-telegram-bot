[Unit]
Description=Puma HTTP Server
After=syslog.target network.target

# Uncomment for socket activation (see below)
# Requires=puma.socket

[Service]
Type=simple

# Puma supports systemd's `Type=notify` and watchdog service
# monitoring, if the sd_notify gem is installed,
# as of Puma 5.1 or later.
# On earlier versions of Puma or JRuby, change this to `Type=simple` and remove
# the `WatchdogSec` line.
# Type=notify

# If your Puma process locks up, systemd's watchdog will restart it within seconds.
# WatchdogSec=10

# Preferably configure a non-privileged user
User=ubuntu
PIDFile=/var/www/meeanw-telegram-bot/shared/tmp/pids/puma.pid

# The path to your application code root directory.
# Also replace the "<YOUR_APP_PATH>" placeholders below with this path.
# Example /home/username/myapp
WorkingDirectory=/var/www/meeanw-telegram-bot/current

# Helpful for debugging socket activation, etc.
Environment=PUMA_DEBUG=1
Environment=RACK_ENV=production
Environment=RAILS_ENV=production
Environment=DISABLE_SPRING=true
Environment=OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

# SystemD will not run puma even if it is in your path. You must specify
# an absolute URL to puma. For example /usr/local/bin/puma
# Alternatively, create a binstub with `bundle binstubs puma --path ./sbin` in the WorkingDirectory
ExecStart=/usr/share/rvm/bin/rvm all do bundle exec puma -C /var/www/meeanw-telegram-bot/shared/config/puma.rb
# ExecStop=/usr/share/rvm/bin/rvm exec bundle exec pumactl -S /var/www/meeanw-telegram-bot/shared/tmp/pids/puma.state stop

Restart=always
StandardOutput=journal
StandardError=journal

SyslogIdentifier=puma

[Install]
WantedBy=multi-user.target